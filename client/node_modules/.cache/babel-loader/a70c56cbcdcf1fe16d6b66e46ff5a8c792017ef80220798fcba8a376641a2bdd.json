{"ast":null,"code":"var _jsxFileName = \"/Users/sage/Documents/zenithApp/client/src/components/map/Map.jsx\";\nimport React from \"react\";\nimport \"./map.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Map() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map__container\",\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: \"https://www.google.com/maps/embed?pb=!1m14!1m12!1m3!1d15907.047736221411!2d-74.06525015!3d4.6365086!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!5e0!3m2!1sru!2sco!4v1691619573321!5m2!1sru!2sco\",\n        width: \"800\",\n        height: \"600\",\n        allowFullScreen: false,\n        loading: \"lazy\",\n        referrerPolicy: \"no-referrer-when-downgrade\",\n        className: \"map__start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n\n// /*global google*/\n// import React from \"react\";\n\n// import { GoogleMap, StandaloneSearchBox, Marker } from \"@react-google-maps/api\";\n\n// let markerArray = [];\n// class Map extends React.Component {\n//   state = {\n//     currentLocation: { lat: 0, lng: 0 },\n//     markers: [],\n//     bounds: null\n//   };\n\n//   onMapLoad = map => {\n//     navigator?.geolocation.getCurrentPosition(\n//       ({ coords: { latitude: lat, longitude: lng } }) => {\n//         const pos = { lat, lng };\n//         this.setState({ currentLocation: pos });\n//       }\n//     );\n//     google.maps.event.addListener(map, \"bounds_changed\", () => {\n//       console.log(map.getBounds());\n//       this.setState({ bounds: map.getBounds() });\n//     });\n//   };\n\n//   onSBLoad = ref => {\n//     this.searchBox = ref;\n//   };\n\n//   onPlacesChanged = () => {\n//     markerArray = [];\n//     let results = this.searchBox.getPlaces();\n//     for (let i = 0; i < results.length; i++) {\n//       let place = results[i].geometry.location;\n//       markerArray.push(place);\n//     }\n//     this.setState({ markers: markerArray });\n//     console.log(markerArray);\n//   };\n\n//   render() {\n//     return (\n//       <div>\n//         <div id=\"searchbox\">\n//           <StandaloneSearchBox\n//             onLoad={this.onSBLoad}\n//             onPlacesChanged={this.onPlacesChanged}\n//             bounds={this.state.bounds}\n//           >\n//             <input\n//               type=\"text\"\n//               placeholder=\"Customized your placeholder\"\n//               style={{\n//                 boxSizing: `border-box`,\n//                 border: `1px solid transparent`,\n//                 width: `240px`,\n//                 height: `32px`,\n//                 padding: `0 12px`,\n//                 borderRadius: `3px`,\n//                 boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n//                 fontSize: `14px`,\n//                 outline: `none`,\n//                 textOverflow: `ellipses`,\n//                 position: \"absolute\",\n//                 left: \"50%\",\n//                 marginLeft: \"-120px\"\n//               }}\n//             />\n//           </StandaloneSearchBox>\n//         </div>\n//         <br />\n//         <div>\n//           <GoogleMap\n//             center={this.state.currentLocation}\n//             zoom={10}\n//             onLoad={map => this.onMapLoad(map)}\n//             mapContainerStyle={{ height: \"400px\", width: \"800px\" }}\n//           >\n//             {this.state.markers.map((mark, index) => (\n//               <Marker key={index} position={mark} />\n//             ))}\n//           </GoogleMap>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default Map;\n_c = Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Map","className","children","src","width","height","allowFullScreen","loading","referrerPolicy","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sage/Documents/zenithApp/client/src/components/map/Map.jsx"],"sourcesContent":["import React from \"react\";\nimport \"./map.scss\";\n\nexport default function Map() {\n    return (\n        <div className=\"map\">\n            <div className=\"map__container\">\n                <iframe src=\"https://www.google.com/maps/embed?pb=!1m14!1m12!1m3!1d15907.047736221411!2d-74.06525015!3d4.6365086!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!5e0!3m2!1sru!2sco!4v1691619573321!5m2!1sru!2sco\" width=\"800\" height=\"600\" allowFullScreen={false} loading=\"lazy\" referrerPolicy=\"no-referrer-when-downgrade\" className=\"map__start\"></iframe>\n            </div>\n        </div>\n    )\n}\n\n    // /*global google*/\n    // import React from \"react\";\n\n    // import { GoogleMap, StandaloneSearchBox, Marker } from \"@react-google-maps/api\";\n\n    // let markerArray = [];\n    // class Map extends React.Component {\n    //   state = {\n    //     currentLocation: { lat: 0, lng: 0 },\n    //     markers: [],\n    //     bounds: null\n    //   };\n\n    //   onMapLoad = map => {\n    //     navigator?.geolocation.getCurrentPosition(\n    //       ({ coords: { latitude: lat, longitude: lng } }) => {\n    //         const pos = { lat, lng };\n    //         this.setState({ currentLocation: pos });\n    //       }\n    //     );\n    //     google.maps.event.addListener(map, \"bounds_changed\", () => {\n    //       console.log(map.getBounds());\n    //       this.setState({ bounds: map.getBounds() });\n    //     });\n    //   };\n\n    //   onSBLoad = ref => {\n    //     this.searchBox = ref;\n    //   };\n\n    //   onPlacesChanged = () => {\n    //     markerArray = [];\n    //     let results = this.searchBox.getPlaces();\n    //     for (let i = 0; i < results.length; i++) {\n    //       let place = results[i].geometry.location;\n    //       markerArray.push(place);\n    //     }\n    //     this.setState({ markers: markerArray });\n    //     console.log(markerArray);\n    //   };\n\n    //   render() {\n    //     return (\n    //       <div>\n    //         <div id=\"searchbox\">\n    //           <StandaloneSearchBox\n    //             onLoad={this.onSBLoad}\n    //             onPlacesChanged={this.onPlacesChanged}\n    //             bounds={this.state.bounds}\n    //           >\n    //             <input\n    //               type=\"text\"\n    //               placeholder=\"Customized your placeholder\"\n    //               style={{\n    //                 boxSizing: `border-box`,\n    //                 border: `1px solid transparent`,\n    //                 width: `240px`,\n    //                 height: `32px`,\n    //                 padding: `0 12px`,\n    //                 borderRadius: `3px`,\n    //                 boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n    //                 fontSize: `14px`,\n    //                 outline: `none`,\n    //                 textOverflow: `ellipses`,\n    //                 position: \"absolute\",\n    //                 left: \"50%\",\n    //                 marginLeft: \"-120px\"\n    //               }}\n    //             />\n    //           </StandaloneSearchBox>\n    //         </div>\n    //         <br />\n    //         <div>\n    //           <GoogleMap\n    //             center={this.state.currentLocation}\n    //             zoom={10}\n    //             onLoad={map => this.onMapLoad(map)}\n    //             mapContainerStyle={{ height: \"400px\", width: \"800px\" }}\n    //           >\n    //             {this.state.markers.map((mark, index) => (\n    //               <Marker key={index} position={mark} />\n    //             ))}\n    //           </GoogleMap>\n    //         </div>\n    //       </div>\n    //     );\n    //   }\n    // }\n\n    // export default Map;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC1B,oBACID,OAAA;IAAKE,SAAS,EAAC,KAAK;IAAAC,QAAA,eAChBH,OAAA;MAAKE,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC3BH,OAAA;QAAQI,GAAG,EAAC,6LAA6L;QAACC,KAAK,EAAC,KAAK;QAACC,MAAM,EAAC,KAAK;QAACC,eAAe,EAAE,KAAM;QAACC,OAAO,EAAC,MAAM;QAACC,cAAc,EAAC,4BAA4B;QAACP,SAAS,EAAC;MAAY;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;;AAEI;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAAC,EAAA,GAnGoBb,GAAG;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}